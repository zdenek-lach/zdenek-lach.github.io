:root {
	--background-color: #000;
	--text-color: #cdd6f4;
	--gradient-start: #000;
	--gradient-end: #26263a;
	--header-bg-color: #45475a;
	--header-text-color: #cdd6f4;
	--border-color: #ff79c6;
	--border-color-alt: #bd93f9;
	--contact-icon-color: #11111b;
	--contact-link-color: #89b4fa;
	--section-bg-color: #313244;
	--section-hover-bg-color: #5a5c6a;
	--button-bg-color: #45475a;
	--button-hover-bg-color: #5a5c6a;
	--switch-bg-color: #45475a;
	--switch-circle-color: #89b4fa;
	--download-button-bg-color: #313244;
	--download-button-hover-bg-color: #1e1e2e;
	--bg-angle: 0deg;
	--border-gradient-start: var(--border-color);
	--border-gradient-middle: var(--border-color-alt);
	--border-gradient-end: var(--border-color);
}

/**
 * `@property` is required for the animation to work.
 * Without it, the angle values wonâ€™t interpolate properly.
 *
 * @see https://dev.to/afif/we-can-finally-animate-css-gradient-kdk
 */
@property --bg-angle {
	inherits: false;
	initial-value: 0deg;
	syntax: '<angle>';
}

.animated-border {
	border-radius: 0.5rem; /* Adjusted for sections */
	border: 0.3rem solid transparent; /* Set border to transparent */
	background: linear-gradient(var(--background-color), var(--background-color))
			padding-box,
		conic-gradient(
				from var(--bg-angle),
				var(--border-gradient-start),
				var(--border-gradient-middle),
				var(--border-gradient-end)
			)
			border-box;
	background-origin: border-box;
	background-clip: content-box, border-box; /* Clip the background to show the gradient border */
	animation: spin 5s infinite linear paused; /* Add smooth spin animation to the border */
	animation-play-state: running;
}

body {
	background-color: var(--background-color); /* Initial background color */
	color: var(--text-color); /* Text color */
	display: flex;
	justify-content: center;
	align-items: center;
	height: 100vh;
	margin: 0;
	font-family: monospace;
	flex-direction: row; /* Change to row to align header and content side by side */
	transition: background-color 1s ease-in-out; /* Smooth transition for background color */
	overflow: hidden; /* Disable vertical scroll bar */
}

body.intro-done {
	background: linear-gradient(
		var(--gradient-start),
		var(--gradient-end)
	); /* Gradient background */
	animation: fadeIn 1s ease-in-out; /* Add fade-in animation */
}

@keyframes fadeIn {
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}

@keyframes fadeInUp {
	from {
		opacity: 0;
		transform: translateY(20px);
	}
	to {
		opacity: 1;
		transform: translateY(0);
	}
}

@keyframes spin {
	to {
		--bg-angle: 360deg;
	}
}

@keyframes spin-border {
	from {
		background-image: linear-gradient(
				var(--background-color),
				var(--background-color)
			),
			linear-gradient(
				45deg,
				var(--border-gradient-start),
				var(--border-gradient-middle),
				var(--border-gradient-end)
			);
	}
	to {
		background-image: linear-gradient(
				var(--background-color),
				var(--background-color)
			),
			linear-gradient(
				45deg,
				var(--border-gradient-middle),
				var(--border-gradient-end),
				var(--border-gradient-middle)
			);
	}
}

.list-item {
	opacity: 0;
	animation: fadeInUp 0.5s forwards;
}

.text-container {
	text-align: center;
	width: auto; /* Keep this line to move the header back to the left */
}

.text {
	font-size: 2em;
	transition: opacity 0.5s ease-in-out; /* Smooth transition for text changes */
	opacity: 1;
}

.header {
	background-color: var(--header-bg-color); /* Mocha surface color */
	color: var(--header-text-color); /* Mocha text color */
	padding: 20px;
	text-align: center;
	overflow: hidden;
	width: 300px; /* Set a fixed width for the header */
	height: 550px;
	/* height: calc(
		100vh - 80px
	); Expand the header from top to bottom with slight offset */
	margin: 20px; /* Add slight offset */
	border-radius: 0.5rem; /* Rounded corners */
	display: flex;
	flex-direction: column;
	justify-content: center; /* Center the text vertically */
	align-items: center; /* Center the content horizontally */
	transition: height 0.7s ease-in-out, opacity 0.7s ease-in-out,
		transform 0.7s ease-in-out; /* Add transition for animation */
	opacity: 0; /* Initially hidden */
	transform: translateY(-20px); /* Initial position for animation */
}

.header.visible {
	opacity: 1; /* Show the header */
	transform: translateY(0); /* Final position for animation */
}

.header img.profile-picture {
	/* Apply the animated-border class */
	border-radius: 0.5rem; /*reflects how round is the profile pic*/
	border: 0.2rem solid transparent; /* Set border to transparent */
	background: linear-gradient(var(--background-color), var(--background-color))
			padding-box,
		conic-gradient(
				from var(--bg-angle),
				var(--border-gradient-start),
				var(--border-gradient-middle),
				var(--border-gradient-end)
			)
			border-box;
	background-origin: border-box;
	background-clip: content-box, border-box; /* Clip the background to show the gradient border */
	animation: spin 5s infinite linear paused; /* Add smooth spin animation to the border */
	animation-play-state: running;
}

.header img {
	border-radius: 0.5rem; /* Keep the rounding on the profile picture */
	width: 150px;
	height: 150px;
	margin-bottom: 20px;
}

header h1 {
	margin: 0;
	font-size: 2.5em;
}

header p {
	margin: 5px 0;
}

.contact {
	display: flex;
	justify-content: center;
	gap: 10px;
	flex-wrap: wrap; /* Ensure icons stay within the page */
}

.contact a {
	color: var(--contact-link-color); /* Mocha accent color */
	text-decoration: none;
	margin: 10px 10px;
	display: flex;
	align-items: center;
	flex-direction: column; /* Align links neatly in line */
}

.contact a:hover {
	text-decoration: underline;
}

.contact a img {
	width: 48px; /* Make the contact icons bigger */
	height: 48px; /* Make the contact icons bigger */
	margin-bottom: 5px; /* Adjust margin to align links neatly */
	border-radius: 0; /* Remove rounding on the contact icons */
	color: var(--contact-icon-color); /* Mocha icon color */
	transition: transform 0.3s ease-in-out, filter 0.3s ease-in-out;
}

.contact a:hover img {
	transform: scale(1.1);
	filter: brightness(1.2);
}

.main-content {
	width: 30%; /* Default width for larger screens */
	margin: 20px; /* Add margin to ensure content doesn't touch the top and bottom */
	display: flex;
	flex-direction: column;
	align-items: center; /* Center the content */
	opacity: 0; /* Initially hidden */
	transform: translateY(20px); /* Initial position for animation */
	transition: opacity 0.5s ease-in-out, transform 0.5s ease-in-out; /* Add transition for animation */
}

@media (max-width: 1920px) {
	.main-content {
		width: 40%; /* Adjust width for 1080p screens */
	}
}

@media (max-width: 600px) {
	.main-content {
		width: 90%; /* Full width for smaller screens */
		margin: 10px 0; /* Adjust margin */
	}
}

.main-content.visible {
	opacity: 1; /* Show the main content */
	transform: translateY(0); /* Final position for animation */
}

section {
	padding: 0; /* Remove padding to make the title span into the border */
	margin: 20px 0; /* Adjust margin to leave space on the sides */
	background-color: var(
		--background-color
	); /* Set section background to black */
	box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
	opacity: 1; /* Ensure the title does not fade away */
	transform: translateY(0); /* Ensure the title does not fade away */
	transition: max-height 0.5s ease-in-out; /* Only animate max-height */
	overflow: hidden; /* Ensure content is hidden when collapsed */
	max-height: 50px; /* Initially collapsed, show only the title */
}

section.visible {
	max-height: 400px; /* Increase the maximum height of expanded sections */
	border-radius: 0.5rem;
	background-color: var(
		--background-color
	); /* Ensure visible sections have black background */
}

section h2 {
	margin: 0; /* Remove margin to make the title span into the border */
	cursor: pointer; /* Indicate that the title is clickable */
	background-color: var(--header-bg-color); /* Mocha initial background color */
	padding: 10px 20px; /* Adjust padding to remove the gap */
	border-top-left-radius: 0.2rem; /* Rounded corners for the top */
	border-top-right-radius: 0.2rem; /* Rounded corners for the top */
	transition: background-color 0.3s ease-in-out;
}

section h2:hover {
	background-color: var(--section-hover-bg-color); /* Mocha hover shade */
}

section.collapsed {
	max-height: 40px; /* Ensure the title is always visible when minimized */
	border-top-left-radius: 0; /* Remove top-left border radius */
	border-top-right-radius: 0; /* Remove top-right border radius */
	border-radius: 0.2rem;
	background-color: var(
		--background-color
	); /* Ensure collapsed sections have black background */
}

ul {
	list-style-type: none;
	padding: 20px; /* Add padding to the list to match the section padding */
}

ul li {
	margin: 10px 0;
}

ul li strong {
	display: inline-block;
	width: 150px;
}

ul li strong {
	display: inline-block;
	width: 150px;
}

.about-me {
	padding: 20px; /* Add padding to match other sections */
	background-color: var(--section-bg-color); /* Mocha surface color */
	border-radius: 0.5rem; /* Rounded corners */
	box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); /* Add shadow to match other sections */
	margin: 20px 0; /* Add margin to match other sections */
	color: var(--text-color); /* Ensure text color matches other sections */
}

@media (max-width: 600px) {
	body {
		flex-direction: column; /* Stack elements vertically */
		height: auto; /* Allow body to expand with content */
		padding: 10px; /* Add padding for better spacing */
		overflow: auto; /* Re-enable scrolling */
		justify-content: center; /* Center the content vertically */
		align-items: center; /* Center the content horizontally */
	}

	.header {
		width: 85%; /* Make the header the same width as the info items */
		height: auto; /* Allow header to expand with content */
		margin: 0; /* Remove margin */
		padding: 10px; /* Adjust padding */
	}

	.header img {
		width: 100px; /* Smaller profile picture */
		height: 100px; /* Smaller profile picture */
	}

	header h1 {
		font-size: 1.5em; /* Smaller font size */
	}

	header p {
		font-size: 1em; /* Smaller font size */
	}

	.contact {
		flex-direction: row; /* Align icons horizontally */
		gap: 5px; /* Smaller gap */
	}

	.contact a img {
		width: 32px; /* Smaller icons */
		height: 32px; /* Smaller icons */
	}

	.main-content {
		width: 90%; /* Full width for main content */
		margin: 10px 0; /* Adjust margin */
	}

	section {
		margin: 10px 0; /* Adjust margin */
	}

	ul {
		padding: 10px; /* Adjust padding */
	}

	ul li strong {
		width: auto; /* Allow strong elements to expand */
	}

	.custom-download-button {
		width: 100%; /* Full width for download button */
		padding: 10px; /* Adjust padding */
	}

	.text-container {
		display: flex;
		justify-content: center; /* Center the text horizontally */
		align-items: center; /* Center the text vertically */
		height: 100vh; /* Full viewport height */
		width: 100%; /* Full viewport width */
	}

	.replay-intro-button {
		width: 1.2rem; /* Smaller button */
		height: 1.2rem; /* Smaller button */
		padding: 5px 10px; /* Adjust padding */
		bottom: 10px; /* Adjust position */
		right: 10px; /* Adjust position */
		display: none; /* Hide the button initially on mobile */
	}

	.replay-intro-button.visible {
		display: inline-block; /* Show the button when visible class is added */
	}

	.replay-intro-button img {
		width: 1.2rem; /* Smaller icon */
		height: 1.2rem; /* Smaller icon */
	}
}

.header-buttons {
	display: flex;
	gap: 10px;
	margin-top: 20px;
}

.button {
	background-color: var(--button-bg-color); /* Mocha button color */
	color: var(--header-text-color); /* Mocha text color */
	border: none;
	padding: 10px 20px;
	border-radius: 0.5rem; /* Rounded corners */
	cursor: pointer;
	transition: background-color 0.3s ease-in-out;
	text-decoration: none; /* Remove underline from link */
	display: inline-block; /* Ensure the link behaves like a button */
}

.button:hover {
	background-color: var(--button-hover-bg-color); /* Mocha hover color */
}

.switch {
	display: flex;
	align-items: center;
	cursor: pointer;
	background-color: var(--switch-bg-color); /* Mocha switch color */
	border-radius: 0.5rem;
	padding: 5px;
	width: 60px;
	height: 30px;
	position: relative;
	transition: background-color 0.3s ease-in-out;
}

.switch input {
	display: none;
}

.switch-label {
	background-color: var(--switch-circle-color); /* Mocha circle color */
	border-radius: 0.5rem;
	width: 20px;
	height: 20px;
	position: absolute;
	left: 5px;
	transition: left 0.3s ease-in-out;
}

.switch input:checked + .switch-label {
	left: 35px; /* Move the circle to the right */
}

.custom-download-button {
	background-color: var(--download-button-bg-color); /* Mocha button color */
	color: var(--header-text-color); /* Mocha text color */
	border: none;
	width: 9rem;
	height: 1rem;
	padding: 10px 20px;
	border-radius: 0.5rem; /* Rounded corners */
	cursor: pointer;
	transition: background-color 0.3s ease-in-out;
	text-decoration: none; /* Remove underline from link */
	display: inline-block; /* Ensure the link behaves like a button */
	text-align: center; /* Center the text */
}

.custom-download-button:hover {
	background-color: var(--download-button-hover-bg-color);
}
.replay-intro-button {
	background-color: var(--download-button-bg-color); /* Mocha button color */
	color: var(--header-text-color); /* Mocha text color */
	border: none;
	width: 1.8rem;
	height: 1.8rem;
	padding: 10px 20px;
	border-radius: 0.5rem; /* Rounded corners */
	cursor: pointer;
	transition: background-color 0.3s ease-in-out, opacity 0.5s ease-in-out; /* Add transition for opacity */
	text-decoration: none; /* Remove underline from link */
	display: inline-block; /* Ensure the link behaves like a button */
	text-align: center; /* Center the text */
	position: fixed;
	bottom: 20px;
	right: 20px;
	opacity: 0; /* Initially hidden */
}
.replay-intro-button.visible {
	opacity: 1; /* Show the button */
}
.replay-intro-button:hover {
	background-color: var(--download-button-hover-bg-color);
}
.replay-intro-button img {
	width: 1.8rem;
	height: 1.8rem;
}

.info-title {
	font-weight: bold;
	width: 150px;
	text-align: left;
}

.info-content {
	flex: 1;
	text-align: left;
	margin-left: 10px;
}

.content-container {
	display: flex;
	align-items: center;
	justify-content: inherit;
}

.progress-bar {
	position: fixed;
	bottom: 0;
	left: 0;
	width: 0;
	height: 5px;
	background: linear-gradient(
		to right,
		var(--border-gradient-start),
		var(--border-gradient-middle),
		var(--border-gradient-end)
	);
	transition: width 0.1s;
	display: none;
}

.skip-instruction {
	font-size: 0.85em; /* Slightly bigger */
	color: var(--text-color);
	opacity: 0;
	margin-top: 10px;
	position: absolute; /* Ensure it doesn't shift the intro text */
	transition: opacity 0.5s ease-in-out; /* Fade-in effect */
	bottom: 50px; /* Position above the progress bar */
	left: 50%;
	transform: translateX(-50%);
	text-align: center;
}
